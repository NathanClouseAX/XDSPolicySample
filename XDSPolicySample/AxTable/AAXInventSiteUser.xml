<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AAXInventSiteUser</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AAXInventSiteUser extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void insert()
    {
        SecurityUserRole SecurityUserRole;
        SecurityRole SecurityRole;
        sysUserInfo sysUserInfo;

        this.InventSiteIdRecId = InventSite::find(this.InventSiteId).RecId;


        select firstonly * from sysUserInfo
            where sysUserInfo.id == this.UserId;

        this.UserIdRecId = sysUserInfo.RecId;

        select count(RecId) from SecurityUserRole
            join AotName, RecId from SecurityRole
            where SecurityUserRole.User == this.UserId
               && SecurityUserRole.AssignmentStatus == RoleAssignmentStatus::Enabled
               && SecurityRole.AotName == 'AAXInventSiteUserPolicyRole'
               && SecurityRole.RecId == SecurityUserRole.SecurityRole;

        if(SecurityUserRole.RecId == 0)
        {
            select firstonly RecId from SecurityRole
                where SecurityRole.AotName == 'AAXInventSiteUserPolicyRole';

            if(SecurityRole.RecId)
            {
                SecurityUserRole.initValue();
                SecurityUserRole.AssignmentMode = RoleAssignmentMode::Automatic;
                SecurityUserRole.AssignmentStatus = RoleAssignmentStatus::Enabled;
                SecurityUserRole.SecurityRole = SecurityRole.RecId;
                SecurityUserRole.User = this.UserId;
                SecurityUserRole.insert();
            }
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <returns></returns>
    public boolean validateWrite()
    {
        boolean ret;

        sysUserInfo sysUserInfo;
    
        ret = super();


        select firstonly * from sysUserInfo
            where sysUserInfo.id == this.UserId;
        if(!sysUserInfo.RecId)
        {
            ret = checkFailed(strFmt("Worker is not also a user"));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void delete()
    {
        AAXInventSiteUser AAXInventSiteUser;

        SecurityUserRole SecurityUserRole;
        SecurityRole SecurityRole;

        UserId UserId = this.UserId;

        select count(RecId) from AAXInventSiteUser
            where AAXInventSiteUser.userId == this.UserId
               && AAXInventSiteUser.RecId != this.RecId;

        super();

        if(AAXInventSiteUser.RecId == 0)
        {
            select firstonly RecId from SecurityRole
                where SecurityRole.AotName == 'AAXInventSiteUserPolicyRole';

            if(SecurityRole.RecId)
            {
                delete_from SecurityUserRole
                    where SecurityUserRole.SecurityRole == SecurityRole.RecId
                       && SecurityUserRole.user == UserId;
            }
        }

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>UserId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventSiteIdRecId</Name>
			<AllowEdit>No</AllowEdit>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UserIdRecId</Name>
			<AllowEdit>No</AllowEdit>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SiteUserIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UserId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UserIdRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>UserIdRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventSiteIdRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventSiteIdRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DirPersonUser</Name>
			<RelatedTable>DirPersonUser</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UserId</Name>
					<Field>UserId</Field>
					<RelatedField>User</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventSite</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventSite_PurchTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UserInfo</Name>
			<RelatedTable>UserInfo</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UserId</Name>
					<Field>UserId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchTable</Name>
			<RelatedTable>PurchTable</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<Field>InventSiteId</Field>
					<RelatedField>InventSiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>